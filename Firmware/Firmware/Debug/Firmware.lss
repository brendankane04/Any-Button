
Firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001a6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001fa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000022c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008fa  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000604  00000000  00000000  00000bca  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000441  00000000  00000000  000011ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000cc  00000000  00000000  00001610  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000045e  00000000  00000000  000016dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002fd  00000000  00000000  00001b3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00001e37  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	15 c0       	rjmp	.+42     	; 0x2e <__bad_interrupt>
   4:	14 c0       	rjmp	.+40     	; 0x2e <__bad_interrupt>
   6:	13 c0       	rjmp	.+38     	; 0x2e <__bad_interrupt>
   8:	12 c0       	rjmp	.+36     	; 0x2e <__bad_interrupt>
   a:	11 c0       	rjmp	.+34     	; 0x2e <__bad_interrupt>
   c:	10 c0       	rjmp	.+32     	; 0x2e <__bad_interrupt>
   e:	0f c0       	rjmp	.+30     	; 0x2e <__bad_interrupt>
  10:	0e c0       	rjmp	.+28     	; 0x2e <__bad_interrupt>
  12:	0d c0       	rjmp	.+26     	; 0x2e <__bad_interrupt>
  14:	0c c0       	rjmp	.+24     	; 0x2e <__bad_interrupt>
  16:	0b c0       	rjmp	.+22     	; 0x2e <__bad_interrupt>
  18:	0a c0       	rjmp	.+20     	; 0x2e <__bad_interrupt>
  1a:	09 c0       	rjmp	.+18     	; 0x2e <__bad_interrupt>
  1c:	08 c0       	rjmp	.+16     	; 0x2e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	aa d0       	rcall	.+340    	; 0x180 <main>
  2c:	ba c0       	rjmp	.+372    	; 0x1a2 <_exit>

0000002e <__bad_interrupt>:
  2e:	e8 cf       	rjmp	.-48     	; 0x0 <__vectors>

00000030 <_Z5blinkv>:
{
	//Normal mode of counting
	

	//Set the prescaler to 1024
	TCCR0B |= _BV(CS02) | _BV(CS00);
  30:	88 b3       	in	r24, 0x18	; 24
  32:	82 60       	ori	r24, 0x02	; 2
  34:	88 bb       	out	0x18, r24	; 24
  36:	2f ef       	ldi	r18, 0xFF	; 255
  38:	89 e6       	ldi	r24, 0x69	; 105
  3a:	98 e1       	ldi	r25, 0x18	; 24
  3c:	21 50       	subi	r18, 0x01	; 1
  3e:	80 40       	sbci	r24, 0x00	; 0
  40:	90 40       	sbci	r25, 0x00	; 0
  42:	e1 f7       	brne	.-8      	; 0x3c <_Z5blinkv+0xc>
  44:	00 c0       	rjmp	.+0      	; 0x46 <__SREG__+0x7>
  46:	00 00       	nop
  48:	88 b3       	in	r24, 0x18	; 24
  4a:	8d 7f       	andi	r24, 0xFD	; 253
  4c:	88 bb       	out	0x18, r24	; 24
  4e:	2f ef       	ldi	r18, 0xFF	; 255
  50:	89 e6       	ldi	r24, 0x69	; 105
  52:	98 e1       	ldi	r25, 0x18	; 24
  54:	21 50       	subi	r18, 0x01	; 1
  56:	80 40       	sbci	r24, 0x00	; 0
  58:	90 40       	sbci	r25, 0x00	; 0
  5a:	e1 f7       	brne	.-8      	; 0x54 <__SREG__+0x15>
  5c:	00 c0       	rjmp	.+0      	; 0x5e <__SREG__+0x1f>
  5e:	00 00       	nop
  60:	08 95       	ret

00000062 <_Z17wait_until_changev>:
  62:	8a b7       	in	r24, 0x3a	; 58
  64:	80 64       	ori	r24, 0x40	; 64
  66:	8a bf       	out	0x3a, r24	; 58
  68:	80 e0       	ldi	r24, 0x00	; 0
  6a:	90 e0       	ldi	r25, 0x00	; 0
  6c:	0a b6       	in	r0, 0x3a	; 58
  6e:	06 fc       	sbrc	r0, 6
  70:	06 c0       	rjmp	.+12     	; 0x7e <_Z17wait_until_changev+0x1c>
  72:	01 96       	adiw	r24, 0x01	; 1
  74:	2a e1       	ldi	r18, 0x1A	; 26
  76:	2a 95       	dec	r18
  78:	f1 f7       	brne	.-4      	; 0x76 <_Z17wait_until_changev+0x14>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <_Z17wait_until_changev+0x1a>
  7c:	f7 cf       	rjmp	.-18     	; 0x6c <_Z17wait_until_changev+0xa>
  7e:	2a b7       	in	r18, 0x3a	; 58
  80:	20 64       	ori	r18, 0x40	; 64
  82:	2a bf       	out	0x3a, r18	; 58
  84:	9c 01       	movw	r18, r24
  86:	22 0f       	add	r18, r18
  88:	33 1f       	adc	r19, r19
  8a:	22 0f       	add	r18, r18
  8c:	33 1f       	adc	r19, r19
  8e:	82 0f       	add	r24, r18
  90:	93 1f       	adc	r25, r19
  92:	88 0f       	add	r24, r24
  94:	99 1f       	adc	r25, r25
  96:	08 95       	ret

00000098 <_Z18record_square_wavev>:
  98:	e4 df       	rcall	.-56     	; 0x62 <_Z17wait_until_changev>
  9a:	e3 df       	rcall	.-58     	; 0x62 <_Z17wait_until_changev>
  9c:	08 95       	ret

0000009e <_Z8read_bitv>:
  9e:	fc df       	rcall	.-8      	; 0x98 <_Z18record_square_wavev>
  a0:	80 3b       	cpi	r24, 0xB0	; 176
  a2:	94 40       	sbci	r25, 0x04	; 4
  a4:	14 f4       	brge	.+4      	; 0xaa <_Z8read_bitv+0xc>
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	08 95       	ret
  aa:	81 e0       	ldi	r24, 0x01	; 1
  ac:	08 95       	ret

000000ae <_Z9read_bytev>:
  ae:	1f 93       	push	r17
  b0:	cf 93       	push	r28
  b2:	df 93       	push	r29
  b4:	c0 e0       	ldi	r28, 0x00	; 0
  b6:	d0 e0       	ldi	r29, 0x00	; 0
  b8:	10 e0       	ldi	r17, 0x00	; 0
  ba:	c8 30       	cpi	r28, 0x08	; 8
  bc:	d1 05       	cpc	r29, r1
  be:	74 f4       	brge	.+28     	; 0xdc <_Z9read_bytev+0x2e>
  c0:	ee df       	rcall	.-36     	; 0x9e <_Z8read_bitv>
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	27 e0       	ldi	r18, 0x07	; 7
  c6:	30 e0       	ldi	r19, 0x00	; 0
  c8:	2c 1b       	sub	r18, r28
  ca:	3d 0b       	sbc	r19, r29
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <_Z9read_bytev+0x24>
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	2a 95       	dec	r18
  d4:	e2 f7       	brpl	.-8      	; 0xce <_Z9read_bytev+0x20>
  d6:	18 2b       	or	r17, r24
  d8:	21 96       	adiw	r28, 0x01	; 1
  da:	ef cf       	rjmp	.-34     	; 0xba <_Z9read_bytev+0xc>
  dc:	81 2f       	mov	r24, r17
  de:	df 91       	pop	r29
  e0:	cf 91       	pop	r28
  e2:	1f 91       	pop	r17
  e4:	08 95       	ret

000000e6 <_Z5Writec>:
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	28 30       	cpi	r18, 0x08	; 8
  ec:	31 05       	cpc	r19, r1
  ee:	4c f5       	brge	.+82     	; 0x142 <_Z5Writec+0x5c>
  f0:	67 e0       	ldi	r22, 0x07	; 7
  f2:	70 e0       	ldi	r23, 0x00	; 0
  f4:	62 1b       	sub	r22, r18
  f6:	73 0b       	sbc	r23, r19
  f8:	48 2f       	mov	r20, r24
  fa:	50 e0       	ldi	r21, 0x00	; 0
  fc:	02 c0       	rjmp	.+4      	; 0x102 <_Z5Writec+0x1c>
  fe:	55 95       	asr	r21
 100:	47 95       	ror	r20
 102:	6a 95       	dec	r22
 104:	e2 f7       	brpl	.-8      	; 0xfe <_Z5Writec+0x18>
 106:	40 ff       	sbrs	r20, 0
 108:	04 c0       	rjmp	.+8      	; 0x112 <_Z5Writec+0x2c>
 10a:	98 b3       	in	r25, 0x18	; 24
 10c:	90 61       	ori	r25, 0x10	; 16
 10e:	98 bb       	out	0x18, r25	; 24
 110:	03 c0       	rjmp	.+6      	; 0x118 <_Z5Writec+0x32>
 112:	98 b3       	in	r25, 0x18	; 24
 114:	9f 7e       	andi	r25, 0xEF	; 239
 116:	98 bb       	out	0x18, r25	; 24
 118:	98 b3       	in	r25, 0x18	; 24
 11a:	98 60       	ori	r25, 0x08	; 8
 11c:	98 bb       	out	0x18, r25	; 24
 11e:	e7 ec       	ldi	r30, 0xC7	; 199
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	31 97       	sbiw	r30, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <_Z5Writec+0x3c>
 126:	00 c0       	rjmp	.+0      	; 0x128 <_Z5Writec+0x42>
 128:	00 00       	nop
 12a:	98 b3       	in	r25, 0x18	; 24
 12c:	97 7e       	andi	r25, 0xE7	; 231
 12e:	98 bb       	out	0x18, r25	; 24
 130:	e7 ec       	ldi	r30, 0xC7	; 199
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	31 97       	sbiw	r30, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <_Z5Writec+0x4e>
 138:	00 c0       	rjmp	.+0      	; 0x13a <_Z5Writec+0x54>
 13a:	00 00       	nop
 13c:	2f 5f       	subi	r18, 0xFF	; 255
 13e:	3f 4f       	sbci	r19, 0xFF	; 255
 140:	d4 cf       	rjmp	.-88     	; 0xea <_Z5Writec+0x4>
 142:	88 b3       	in	r24, 0x18	; 24
 144:	8f 7e       	andi	r24, 0xEF	; 239
 146:	88 bb       	out	0x18, r24	; 24
 148:	08 95       	ret

0000014a <_Z7IR_Recvv>:
 14a:	cf 93       	push	r28
 14c:	a5 df       	rcall	.-182    	; 0x98 <_Z18record_square_wavev>
 14e:	8c 34       	cpi	r24, 0x4C	; 76
 150:	9d 41       	sbci	r25, 0x1D	; 29
 152:	1c f4       	brge	.+6      	; 0x15a <_Z7IR_Recvv+0x10>
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	0d c0       	rjmp	.+26     	; 0x174 <_Z7IR_Recvv+0x2a>
 15a:	83 df       	rcall	.-250    	; 0x62 <_Z17wait_until_changev>
 15c:	88 3b       	cpi	r24, 0xB8	; 184
 15e:	9b 40       	sbci	r25, 0x0B	; 11
 160:	24 f4       	brge	.+8      	; 0x16a <_Z7IR_Recvv+0x20>
 162:	7f df       	rcall	.-258    	; 0x62 <_Z17wait_until_changev>
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	92 e0       	ldi	r25, 0x02	; 2
 168:	05 c0       	rjmp	.+10     	; 0x174 <_Z7IR_Recvv+0x2a>
 16a:	a1 df       	rcall	.-190    	; 0xae <_Z9read_bytev>
 16c:	c8 2f       	mov	r28, r24
 16e:	bb df       	rcall	.-138    	; 0xe6 <_Z5Writec>
 170:	8c 2f       	mov	r24, r28
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	cf 91       	pop	r28
 176:	08 95       	ret

00000178 <_Z14interrupt_initv>:
 178:	85 b7       	in	r24, 0x35	; 53
 17a:	81 60       	ori	r24, 0x01	; 1
 17c:	85 bf       	out	0x35, r24	; 53
 17e:	08 95       	ret

00000180 <main>:
}

int main(void)
{
	//Set LED pin as an output
	DDRB |= 0x02; 
 180:	87 b3       	in	r24, 0x17	; 23
 182:	82 60       	ori	r24, 0x02	; 2
 184:	87 bb       	out	0x17, r24	; 23

	interrupt_init();
 186:	f8 df       	rcall	.-16     	; 0x178 <_Z14interrupt_initv>
	IR_cmd remote_cmd;
	remote_cmd.addr = 0x00;
	remote_cmd.cmd = 0x00;

	//Initialize the bit-bang write command
	DDRB |= SDA | SCL;
 188:	87 b3       	in	r24, 0x17	; 23
 18a:	88 61       	ori	r24, 0x18	; 24
 18c:	87 bb       	out	0x17, r24	; 23
	PORTB |= SCL;
 18e:	88 b3       	in	r24, 0x18	; 24
 190:	88 60       	ori	r24, 0x08	; 8
 192:	88 bb       	out	0x18, r24	; 24

	sei();
 194:	78 94       	sei

	int length = 0;
	while(1)
	{
		remote_cmd = IR_Recv();
 196:	d9 df       	rcall	.-78     	; 0x14a <_Z7IR_Recvv>
		if(remote_cmd.cmd == 0x16) blink();
 198:	96 31       	cpi	r25, 0x16	; 22
 19a:	09 f4       	brne	.+2      	; 0x19e <main+0x1e>
 19c:	49 df       	rcall	.-366    	; 0x30 <_Z5blinkv>
		blink();
 19e:	48 df       	rcall	.-368    	; 0x30 <_Z5blinkv>
	PORTB |= SCL;

	sei();

	int length = 0;
	while(1)
 1a0:	fa cf       	rjmp	.-12     	; 0x196 <main+0x16>

000001a2 <_exit>:
 1a2:	f8 94       	cli

000001a4 <__stop_program>:
 1a4:	ff cf       	rjmp	.-2      	; 0x1a4 <__stop_program>
